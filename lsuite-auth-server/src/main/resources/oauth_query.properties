create table if not exists oauth_refresh_token (
  token_id VARCHAR(255),
  token LONG VARBINARY,
  authentication LONG VARBINARY
)


create table if not exists oauth_access_token (
  token_id VARCHAR(255),
  token LONG VARBINARY,
  authentication_id VARCHAR(255) PRIMARY KEY,
  user_name VARCHAR(255),
  client_id VARCHAR(255),
  authentication LONG VARBINARY,
  refresh_token VARCHAR(255)
)

CREATE TABLE `oauth_access_token` (
  `token_id` varchar(255) DEFAULT NULL,
  `token` mediumblob,
  `authentication_id` varchar(255) NOT NULL,
  `user_name` varchar(255) DEFAULT NULL,
  `client_id` varchar(255) DEFAULT NULL,
  `authentication` mediumblob,
  `refresh_token` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`authentication_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


create table oauth_client_details(
	client_id varchar(256) primary key,
    resource_ids varchar(256),
    client_secret varchar(256),
    scope varchar(256),
    authorized_grant_types varchar(256),
    web_server_redirect_uri varchar(256),
    authorities varchar(256),
    access_token_validity integer,
    refresh_token_validity integer,
    additional_information varchar(4096),
    autoapprove varchar(256)		
);

insert into oauth_client_details 
	(client_id, -- ,resource_ids,
    client_secret, scope,
    authorized_grant_types, web_server_redirect_uri,
    authorities , access_token_validity,
    refresh_token_validity, additional_information, autoapprove)
    values ( 'live-test', 
       'bGl2ZS10ZXN0', 'read,write',
      'password,refresh_token', null,
       null, 300, 
       36000, null, true
    );
    
create table my_token_details(
    access_token varchar(256),
    old_access_token varchar(256),
    refresh_token varchar(150) primary key,
    access_token_date datetime,
    refresh_token_date datetime,
    access_token_expire_in integer,
    client_address varchar(150)
);