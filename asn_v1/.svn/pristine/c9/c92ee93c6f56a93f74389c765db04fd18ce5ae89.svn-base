package com.lonar.asn.dao;

import java.util.List;

import com.lonar.asn.model.BusinessException;
import com.lonar.asn.model.LtPoShipment;
import com.lonar.asn.model.LtShipmentHeaders;
import com.lonar.asn.model.LtShipmentLines;
import com.lonar.asn.model.ProcedureCall;
import com.lonar.asn.model.SubmitAsn;

public interface AsnHeaderDao {

	List<String> getListOfStr()throws BusinessException;
	
	Long getAsnHeaderDataCount(LtShipmentHeaders input) throws BusinessException;
	List<LtShipmentHeaders> getAsnHeaderDataTableDetails(LtShipmentHeaders input) throws BusinessException;

	LtShipmentHeaders getByAsnHeaderId(Long id) throws BusinessException;

	List<LtShipmentLines> getAsnLinesByAsnHeaderId(Long id) throws BusinessException;

	boolean updateLines(LtShipmentLines ltShipmentLines) throws BusinessException;

	Long getAsnHeaderDataCountByLocation(LtShipmentHeaders shipmentHeaders, Long locationId) throws BusinessException;

	List<LtShipmentHeaders> getAsnHeaderDataTableDetailsByLocation(LtShipmentHeaders input, Long locationId) throws BusinessException;

	boolean submitAsn(SubmitAsn submitAsn) throws BusinessException;

	SubmitAsn getAsnStatusByAsnHeaderId(Long id) throws BusinessException;
	
	Long getCountpoShipmentDataTableByVendorId(LtPoShipment poShipment, Long vendorId) throws BusinessException;

	List<LtPoShipment> getPoShipmentDataTableByVendorId(LtPoShipment poShipment, Long vendorId) throws BusinessException;
	
	Long getShipmentSourceIds() throws BusinessException;
	
	//public ResponseEntity<Status> saveShipmentSource(List<Integer> shipmentIds) throws BusinessException;
	
	ProcedureCall saveAsnHeaderAndLineData(Long sourceId) throws BusinessException;
	
	public boolean deleteAsnLineAttachment(Long id) throws BusinessException;
}
